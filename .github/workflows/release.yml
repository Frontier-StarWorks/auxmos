name: Build Release

permissions:
    id-token: write
    attestations: write

on:
    release:
        types: [published]

jobs:
    release:
        name: Build and Release
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: ubuntu-20.04
                      target_name: i686-unknown-linux-gnu
                      artifact_name: libauxmos.so
                    - os: windows-latest
                      target_name: i686-pc-windows-msvc
                      artifact_name: auxmos.dll
                      debug_pdb_name: auxmos.pdb
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Toolchains (Windows)
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  target: i686-pc-windows-msvc
              if: matrix.os == 'windows-latest'

            - name: Install g++ multilib
              run: |
                  sudo dpkg --add-architecture i386
                  sudo apt-get update
                  sudo apt-get install build-essential g++-multilib libc6-i386 libstdc++6:i386
              if: matrix.os == 'ubuntu-20.04'

            - name: Setup Toolchains (Ubuntu)
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  target: i686-unknown-linux-gnu
              if: matrix.os == 'ubuntu-20.04'

            - name: Build auxmos (Windows)
              uses: actions-rs/cargo@v1
              with:
                  toolchain: stable
                  command: build
                  args: --target i686-pc-windows-msvc --release --features katmos
              if: matrix.os == 'windows-latest'

            - name: Build auxmos (Ubuntu)
              uses: actions-rs/cargo@v1
              with:
                  toolchain: stable
                  command: build
                  args: --target i686-unknown-linux-gnu --release --features katmos
              if: matrix.os == 'ubuntu-20.04'

            - name: Create bindings (Ubuntu)
              uses: actions-rs/cargo@v1
              with:
                  toolchain: stable
                  command: test
                  args: --target i686-unknown-linux-gnu --release --features katmos --package auxmos --lib -- generate_binds --exact --show-output
              if: matrix.os == 'ubuntu-20.04'

            - name: Generate build provenance (Binaries)
              uses: actions/attest-build-provenance@v1
              with:
                  subject-path: target/${{ matrix.target_name }}/release/${{ matrix.artifact_name }}

            - name: Generate build provenance (Debug information)
              uses: actions/attest-build-provenance@v1
              with:
                  subject-path: target/${{ matrix.target_name }}/release/${{ matrix.debug_pdb_name }}
              if: matrix.os == 'windows-latest'

            - name: Generate build provenance (Bindings)
              uses: actions/attest-build-provenance@v1
              with:
                  subject-path: bindings.dm
              if: matrix.os == 'ubuntu-20.04'

            - name: Upload binary to release
              uses: svenstaro/upload-release-action@v1-release
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  file: target/${{ matrix.target_name }}/release/${{ matrix.artifact_name }}
                  asset_name: ${{ matrix.artifact_name }}
                  tag: ${{ github.ref }}

            - name: Upload debug informations to release
              uses: svenstaro/upload-release-action@v1-release
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  file: target/${{ matrix.target_name }}/release/${{ matrix.debug_pdb_name }}
                  asset_name: ${{ matrix.debug_pdb_name }}
                  tag: ${{ github.ref }}
              if: matrix.os == 'windows-latest'

            - name: Upload binding to release
              uses: svenstaro/upload-release-action@v1-release
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  file: bindings.dm
                  asset_name: bindings.dm
                  tag: ${{ github.ref }}
              if: matrix.os == 'ubuntu-20.04'
